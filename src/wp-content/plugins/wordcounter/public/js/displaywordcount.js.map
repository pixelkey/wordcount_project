{"version":3,"file":"displaywordcount.js","mappings":"AACAA,SAASC,iBAAiB,oBAAoB,WAC1C,IAAIC,EAAiBF,SAASG,eAAe,WAC7C,GAAKD,EAAL,CAEA,IAAIE,EAAWC,SAASC,YAAYF,SAAU,IAC1CG,EAAY,KAWZC,EARJ,SAA2BJ,GACvB,OAAIA,GAAY,EACL,SAASK,GAAK,OAAOA,CAAG,EAExB,SAASA,GAAK,OAAOA,EAAIA,EAAIA,CAAG,CAE/C,CAEqBC,CAAkBN,GAoBvCO,uBAlBA,SAASC,EAAeC,GACfN,IAAWA,EAAYM,GAC5B,IAAIC,EAAWD,EAAYN,EACvBE,EAAIM,KAAKC,IAAIF,EAfN,IAe2B,GAClCG,EAAkBT,EAAeC,GAEjCS,EAAeH,KAAKI,MAAMF,GAAmBb,EAAW,IAAM,EAClEc,EAAeH,KAAKC,IAAIE,EAAcd,GAEtCF,EAAekB,YAAcF,EAAaG,iBAEtCP,EAvBO,IAwBPH,sBAAsBC,GAEtBV,EAAekB,YAAchB,EAASiB,gBAE9C,GAhC2B,CAmC/B","sources":["webpack:///./src/wp-content/plugins/wordcounter/assets/js/frontend/displaywordcount.js"],"sourcesContent":["\ndocument.addEventListener('DOMContentLoaded', function() {\n    var counterElement = document.getElementById('counter');\n    if (!counterElement) return;\n\n    var maxCount = parseInt(counterData.maxCount, 10);\n    var startTime = null;\n    var duration = 1000;\n\n    function getEasingFunction(maxCount) {\n        if (maxCount <= 1) {\n            return function(t) { return t; };\n        } else {\n            return function(t) { return t * t * t; };\n        }\n    }\n\n    var easingFunction = getEasingFunction(maxCount);\n\n    function animateCounter(timestamp) {\n        if (!startTime) startTime = timestamp;\n        var progress = timestamp - startTime;\n        var t = Math.min(progress / duration, 1);\n        var easedPercentage = easingFunction(t);\n\n        var currentCount = Math.floor(easedPercentage * (maxCount - 1)) + 1;\n        currentCount = Math.min(currentCount, maxCount);\n\n        counterElement.textContent = currentCount.toLocaleString();\n\n        if (progress < duration) {\n            requestAnimationFrame(animateCounter);\n        } else {\n            counterElement.textContent = maxCount.toLocaleString();\n        }\n    }\n\n    requestAnimationFrame(animateCounter);\n});\n\n\n// function display_header($atts)\n// {\n\n// \t$allowed_styles = array('bluesky', 'blackgrey', 'blackwhite', 'blackneon');\n\n// \tif (isset($_POST['selected_style']) && in_array($_POST['selected_style'], $allowed_styles)) {\n// \t\t$style = $_POST['selected_style'];\n// \t} else {\n// \t\t$style = 'bluesky';\n// \t}\n\n// \t// $atts = shortcode_atts(array(\n// \t// \t'style' => 'bluesky',\n// \t// ), $atts, 'word_counter');\n\n// \t// $style = $atts['style'];\n\n// \tif ($style == 'bluesky') {\n// \t\twp_enqueue_style('custom-counter-styles', plugin_dir_url(__FILE__) . 'public/css/bluesky.css');\n// \t} elseif ($style == 'blackgrey') {\n// \t\twp_enqueue_style('custom-counter-styles2', plugin_dir_url(__FILE__) . 'public/css/blackgrey.css');\n// \t} elseif ($style == 'blackwhite') {\n// \t\twp_enqueue_style('custom-counter-styles3', plugin_dir_url(__FILE__) . 'public/css/blackwhite.css');\n// \t} elseif ($style == 'blackneon') {\n// \t\twp_enqueue_style('custom-counter-styles4', plugin_dir_url(__FILE__) . 'public/css/blackneon.css');\n// \t} else {\n// \t\twp_enqueue_style('custom-counter-styles', plugin_dir_url(__FILE__) . 'public/css/bluesky.css');\n// \t}\n\n// \t$Art = get_the_content();\n// \t$Art = strip_tags($Art);\n// \t$count = str_word_count($Art);\n\n\n// \t$counter = '\n// \t<div class=\"card\"><div class=\"bg\"><div class=\"wcount\">Word Count <br><hr><span id=\"counter\" class= \"wnumber\">0</span></div></div><div class=\"blob\"></div></div>\n//     <script type=\"text/javascript\">\n//         var counterElement = document.getElementById(\"counter\");\n        \n//         var maxCount = ' . $count . ';\n// \t\tvar startTime = null;\n// \t\tvar duration = 1000;\n\n// \t\t function getEasingFunction(maxCount) {\n//             if (maxCount <= 1) {\n//                 return function(t) { return t; };\n//             } else {\n//                 return function(t) { return t * t * t; };\n//             }\n//         }\n\n//         var easingFunction = getEasingFunction(maxCount);\n\t\t\n// \t\tfunction animateCounter(timestamp){\n// \t\t   if (!startTime) startTime = timestamp;\n//     \t\tvar progress = timestamp - startTime;\n//     \t\tvar t = Math.min(progress / duration, 1);\n//     \t\tvar easedPercentage = easingFunction(t);\n    \t\n// \t\t\tvar currentCount = Math.floor(easedPercentage * (maxCount - 1)) + 1;\n// \t\t\tcurrentCount = Math.min(currentCount, maxCount);\n\n//     \t\tcounterElement.textContent = currentCount.toLocaleString();\n\n// \t    if (progress < duration) {\n//     \t    requestAnimationFrame(animateCounter);\n//     \t} else {\n//         \tcounterElement.textContent = maxCount.toLocaleString();\n//     \t\t}\n// \t\t}\n// \t\trequestAnimationFrame(animateCounter);\n\n//     </script>\n//     ';\n\n// \treturn $counter;\n// }"],"names":["document","addEventListener","counterElement","getElementById","maxCount","parseInt","counterData","startTime","easingFunction","t","getEasingFunction","requestAnimationFrame","animateCounter","timestamp","progress","Math","min","easedPercentage","currentCount","floor","textContent","toLocaleString"],"sourceRoot":""}