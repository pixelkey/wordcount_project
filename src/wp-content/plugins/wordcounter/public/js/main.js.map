{"version":3,"file":"main.js","mappings":"AACAA,SAASC,iBAAiB,oBAAoB,WAC1C,IAAIC,EAAiBF,SAASG,eAAe,WAC7C,GAAKD,EAAL,CAEA,IAAIE,EAAWC,SAASC,YAAYF,SAAU,IAC1CG,EAAY,KAWZC,EARJ,SAA2BJ,GACvB,OAAIA,GAAY,EACL,SAASK,GAAK,OAAOA,CAAG,EAExB,SAASA,GAAK,OAAOA,EAAIA,EAAIA,CAAG,CAE/C,CAEqBC,CAAkBN,GAoBvCO,uBAlBA,SAASC,EAAeC,GACfN,IAAWA,EAAYM,GAC5B,IAAIC,EAAWD,EAAYN,EACvBE,EAAIM,KAAKC,IAAIF,EAfN,IAe2B,GAClCG,EAAkBT,EAAeC,GAEjCS,EAAeH,KAAKI,MAAMF,GAAmBb,EAAW,IAAM,EAClEc,EAAeH,KAAKC,IAAIE,EAAcd,GAEtCF,EAAekB,YAAcF,EAAaG,iBAEtCP,EAvBO,IAwBPH,sBAAsBC,GAEtBV,EAAekB,YAAchB,EAASiB,gBAE9C,GAhC2B,CAmC/B,ICrCArB,SAASC,iBAAiB,oBAAoB,WAC1C,IAGIqB,EAAeC,aAAaC,QAAQ,mBAAqB,UAQzDC,EAAS,qCAXO,CAAC,UAAW,YAAa,aAAc,aAY7CC,SAAQ,SAAUC,GAC5B,IAPaC,EAOTC,EAAWP,IAAiBK,EAAS,UAAY,GACjDG,GARSF,EAQWD,GAPbI,OAAO,GAAGC,cAAgBJ,EAAIK,MAAM,GAQ/CR,GAAU,+EAAiFE,EAAQ,KAAOE,EAAU,KAAOC,EAAY,oBAC3I,IACAL,GAAU,UAGV,IAAIS,EAAYlC,SAASG,eAAe,4BASxC,SAASgC,EAAWR,GAChB,IAAIS,EAAS,gBACTC,EAAUrC,SAASG,eAAeiC,GAClCC,GACAA,EAAQC,WAAWC,YAAYF,GAGnC,IAAIG,EAAOxC,SAASyC,cAAc,QAClCD,EAAKE,GAAKN,EACVI,EAAKG,IAAM,aACXH,EAAKI,KAAO,WACZJ,EAAKK,KAAOC,kBAAkBC,cAAgB,cAAgBpB,EAAQ,OACtEa,EAAKQ,MAAQ,MACbhD,SAASiD,qBAAqB,QAAQ,GAAGC,YAAYV,EACzD,CAtBIN,GACAA,EAAUiB,UAAY1B,EAwB1BU,EAAWb,GAGEtB,SAASoD,iBAAiB,qDAChC1B,SAAQ,SAAU2B,GACrBA,EAAMpD,iBAAiB,UAAU,WAC7B,IAAIqD,EAAgBC,KAAKC,MACzBjC,aAAakC,QAAQ,iBAAkBH,GACvCnB,EAAWmB,EACf,GACJ,KAhCII,QAAQC,MAAM,0CAiCtB","sources":["webpack:///./src/wp-content/plugins/wordcounter/assets/js/frontend/displaywordcount.js","webpack:///./src/wp-content/plugins/wordcounter/assets/js/backend/selectstyle.js"],"sourcesContent":["\ndocument.addEventListener('DOMContentLoaded', function() {\n    var counterElement = document.getElementById('counter');\n    if (!counterElement) return;\n\n    var maxCount = parseInt(counterData.maxCount, 10);\n    var startTime = null;\n    var duration = 1000;\n\n    function getEasingFunction(maxCount) {\n        if (maxCount <= 1) {\n            return function(t) { return t; };\n        } else {\n            return function(t) { return t * t * t; };\n        }\n    }\n\n    var easingFunction = getEasingFunction(maxCount);\n\n    function animateCounter(timestamp) {\n        if (!startTime) startTime = timestamp;\n        var progress = timestamp - startTime;\n        var t = Math.min(progress / duration, 1);\n        var easedPercentage = easingFunction(t);\n\n        var currentCount = Math.floor(easedPercentage * (maxCount - 1)) + 1;\n        currentCount = Math.min(currentCount, maxCount);\n\n        counterElement.textContent = currentCount.toLocaleString();\n\n        if (progress < duration) {\n            requestAnimationFrame(animateCounter);\n        } else {\n            counterElement.textContent = maxCount.toLocaleString();\n        }\n    }\n\n    requestAnimationFrame(animateCounter);\n});\n\n\n// function display_header($atts)\n// {\n\n// \t$allowed_styles = array('bluesky', 'blackgrey', 'blackwhite', 'blackneon');\n\n// \tif (isset($_POST['selected_style']) && in_array($_POST['selected_style'], $allowed_styles)) {\n// \t\t$style = $_POST['selected_style'];\n// \t} else {\n// \t\t$style = 'bluesky';\n// \t}\n\n// \t// $atts = shortcode_atts(array(\n// \t// \t'style' => 'bluesky',\n// \t// ), $atts, 'word_counter');\n\n// \t// $style = $atts['style'];\n\n// \tif ($style == 'bluesky') {\n// \t\twp_enqueue_style('custom-counter-styles', plugin_dir_url(__FILE__) . 'public/css/bluesky.css');\n// \t} elseif ($style == 'blackgrey') {\n// \t\twp_enqueue_style('custom-counter-styles2', plugin_dir_url(__FILE__) . 'public/css/blackgrey.css');\n// \t} elseif ($style == 'blackwhite') {\n// \t\twp_enqueue_style('custom-counter-styles3', plugin_dir_url(__FILE__) . 'public/css/blackwhite.css');\n// \t} elseif ($style == 'blackneon') {\n// \t\twp_enqueue_style('custom-counter-styles4', plugin_dir_url(__FILE__) . 'public/css/blackneon.css');\n// \t} else {\n// \t\twp_enqueue_style('custom-counter-styles', plugin_dir_url(__FILE__) . 'public/css/bluesky.css');\n// \t}\n\n// \t$Art = get_the_content();\n// \t$Art = strip_tags($Art);\n// \t$count = str_word_count($Art);\n\n\n// \t$counter = '\n// \t<div class=\"card\"><div class=\"bg\"><div class=\"wcount\">Word Count <br><hr><span id=\"counter\" class= \"wnumber\">0</span></div></div><div class=\"blob\"></div></div>\n//     <script type=\"text/javascript\">\n//         var counterElement = document.getElementById(\"counter\");\n        \n//         var maxCount = ' . $count . ';\n// \t\tvar startTime = null;\n// \t\tvar duration = 1000;\n\n// \t\t function getEasingFunction(maxCount) {\n//             if (maxCount <= 1) {\n//                 return function(t) { return t; };\n//             } else {\n//                 return function(t) { return t * t * t; };\n//             }\n//         }\n\n//         var easingFunction = getEasingFunction(maxCount);\n\t\t\n// \t\tfunction animateCounter(timestamp){\n// \t\t   if (!startTime) startTime = timestamp;\n//     \t\tvar progress = timestamp - startTime;\n//     \t\tvar t = Math.min(progress / duration, 1);\n//     \t\tvar easedPercentage = easingFunction(t);\n    \t\n// \t\t\tvar currentCount = Math.floor(easedPercentage * (maxCount - 1)) + 1;\n// \t\t\tcurrentCount = Math.min(currentCount, maxCount);\n\n//     \t\tcounterElement.textContent = currentCount.toLocaleString();\n\n// \t    if (progress < duration) {\n//     \t    requestAnimationFrame(animateCounter);\n//     \t} else {\n//         \tcounterElement.textContent = maxCount.toLocaleString();\n//     \t\t}\n// \t\t}\n// \t\trequestAnimationFrame(animateCounter);\n\n//     </script>\n//     ';\n\n// \treturn $counter;\n// }","\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var allowedStyles = ['bluesky', 'blackgrey', 'blackwhite', 'blackneon'];\n\n    // Retrieve the current style from localStorage or default to 'bluesky'\n    var currentStyle = localStorage.getItem('selected_style') || 'bluesky';\n\n    // Function to capitalize the first letter\n    function ucfirst(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    // Generate the form dynamically\n    var output = '<form class=\"style-selector-form\">';\n    allowedStyles.forEach(function (style) {\n        var checked = (currentStyle === style) ? 'checked' : '';\n        var styleName = ucfirst(style);\n        output += '<div class=\"button\"><label><input type=\"radio\" name=\"selected_style\" value=\"' + style + '\" ' + checked + '> ' + styleName + '</label><br></div>';\n    });\n    output += '</form>';\n\n    // Insert the form into the page\n    var container = document.getElementById('style-selector-container');\n    if (container) {\n        container.innerHTML = output;\n    } else {\n        console.error('Container for style selector not found.');\n        return;\n    }\n\n    // Function to apply the selected style\n    function applyStyle(style) {\n        var linkId = 'dynamic-style';\n        var oldLink = document.getElementById(linkId);\n        if (oldLink) {\n            oldLink.parentNode.removeChild(oldLink);\n        }\n\n        var link = document.createElement('link');\n        link.id = linkId;\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = styleSelectorData.pluginBaseUrl + 'public/css/' + style + '.css';\n        link.media = 'all';\n        document.getElementsByTagName('head')[0].appendChild(link);\n    }\n\n    // Apply the current style on page load\n    applyStyle(currentStyle);\n\n    // Handle style change events\n    var radios = document.querySelectorAll(\".style-selector-form input[name='selected_style']\");\n    radios.forEach(function (radio) {\n        radio.addEventListener(\"change\", function () {\n            var selectedStyle = this.value;\n            localStorage.setItem('selected_style', selectedStyle);\n            applyStyle(selectedStyle);\n        });\n    });\n});\n\n// function select_style() {\n//     $allowed_styles = array('bluesky', 'blackgrey', 'blackwhite', 'blackneon');\n\n//     if (isset($_POST['selected_style']) && in_array($_POST['selected_style'], $allowed_styles)) {\n//         $current_style = $_POST['selected_style'];\n//     } else {\n//         $current_style = 'bluesky';\n//     }\n\n//     $output = '<form method=\"post\" class=\"style-selector-form\">';\n//     $styles = array('bluesky', 'blackgrey', 'blackwhite', 'blackneon');\n//     foreach($styles as $style) {\n//         $checked = ($current_style == $style) ? 'checked' : '';\n//         $style_name = ucfirst($style); // Capitalize the first letter\n//         $output.= '<div class=\"button\"><label><input type=\"radio\" name=\"selected_style\" value=\"'.$style. '\" '.$checked. '> '.$style_name. '</label><br></div>';\n//     }\n\n\n//     $output.= '</form>';\n//     $output.= '\n//         < script type = \"text/javascript\" >\n//             document.addEventListener(\"DOMContentLoaded\", function () {\n//                 var radios = document.querySelectorAll(\".style-selector-form input[name=\\'selected_style\\']\");\n//                 radios.forEach(function (radio) {\n//                     radio.addEventListener(\"change\", function () {\n//                         this.form.submit();\n//                     });\n//                 });\n//             });\n//     </script >\n//         ';\n\n//     return $output;\n// }\n"],"names":["document","addEventListener","counterElement","getElementById","maxCount","parseInt","counterData","startTime","easingFunction","t","getEasingFunction","requestAnimationFrame","animateCounter","timestamp","progress","Math","min","easedPercentage","currentCount","floor","textContent","toLocaleString","currentStyle","localStorage","getItem","output","forEach","style","str","checked","styleName","charAt","toUpperCase","slice","container","applyStyle","linkId","oldLink","parentNode","removeChild","link","createElement","id","rel","type","href","styleSelectorData","pluginBaseUrl","media","getElementsByTagName","appendChild","innerHTML","querySelectorAll","radio","selectedStyle","this","value","setItem","console","error"],"sourceRoot":""}